apply plugin: 'com.android.library'

android {
    compileSdkVersion 25
    buildToolsVersion "27.0.3"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 1
        versionName "1.0.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile rootProject.ext.dependencies["appcompat-v7"]
    //下拉刷新适配层
    compile project(':liba-pull-refresh-layout')
    //演示下拉刷新中间层使用的下拉刷新布局SmartRefreshLayout
    compile 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.5.1'
    //没有使用特殊Header，可以不加这行
    compile 'com.scwang.smartrefresh:SmartRefreshHeader:1.0.5.1'
}

//是否提交到仓库
def upload = true
//是否为正版
def release = false
//提交到服务器
if (upload) {
    apply plugin: 'maven'
    group = 'oms.mmc'
    version = !release ? android.defaultConfig.versionName + '-SNAPSHOT' : android.defaultConfig.versionName
    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.sourceFiles
    }
    artifacts {
        //当前aar 文件名
        archives file('liba-smart-pull-refresh.aar')
        archives androidSourcesJar
    }
    uploadArchives {
        repositories.mavenDeployer {
            println "upload smart-pull-refresh version:" + version
            repository(url: MAVEN_R_URL) {
                authentication(userName: MAVEN_D_USERNAME, password: MAVEN_D_PASSWORD)
            }
            snapshotRepository(url: MAVEN_S_URL) {
                authentication(userName: MAVEN_D_USERNAME, password: MAVEN_D_PASSWORD)
            }
            pom.artifactId = "smart-pull-refresh"
        }
    }
}

